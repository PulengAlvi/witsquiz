{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n//import { getAnalytics } from \"firebase/analytics\";\nimport { getAuth, GoogleAuthProvider, updateProfile } from \"firebase/auth\";\nimport { getDownloadURL, getStorage, ref, uploadBytes } from \"firebase/storage\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBNPWqWrvcGUEFhH89YIFMQNrRnuVCOO9Q\",\n  authDomain: \"witsquiz.firebaseapp.com\",\n  projectId: \"witsquiz\",\n  storageBucket: \"witsquiz.appspot.com\",\n  messagingSenderId: \"181567589133\",\n  appId: \"1:181567589133:web:559f28178c51e7a55a7e44\",\n  measurementId: \"G-3GLGV18V8H\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst storage = getStorage();\nexport const auth = getAuth(app);\nexport const googleProvider = new GoogleAuthProvider();\n//const analytics = getAnalytics(app);\n/*\r\n// Custom Hook\r\nexport function useAuth() {\r\n  const [ currentUser, setCurrentUser ] = useState();\r\n\r\n  useEffect(() => {\r\n    const unsub = onAuthStateChanged(auth, user => setCurrentUser(user));\r\n    return unsub;\r\n  }, [])\r\n\r\n  return currentUser;\r\n}*/\n\n//Storage\nexport async function upload(file, currentUser, setLoading) {\n  const fileRef = ref(storage, \"profilepic/\" + currentUser.uid + \".png\");\n  setLoading(true);\n  const snapshot = await uploadBytes(fileRef, file);\n  const photoURL = await getDownloadURL(fileRef);\n  updateProfile(currentUser, {\n    photoURL\n  });\n  setLoading(false);\n  alert(\"New Profile Picture Uploaded!!!\");\n}","map":{"version":3,"names":["initializeApp","getAuth","GoogleAuthProvider","updateProfile","getDownloadURL","getStorage","ref","uploadBytes","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","storage","auth","googleProvider","upload","file","currentUser","setLoading","fileRef","uid","snapshot","photoURL","alert"],"sources":["C:/Users/Duma/OneDrive - University of Witwatersrand/Documents/GitHub/witsquiz/witsquiz/src/config/firebase.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n//import { getAnalytics } from \"firebase/analytics\";\r\nimport {getAuth, GoogleAuthProvider, updateProfile} from \"firebase/auth\"\r\nimport { getDownloadURL, getStorage, ref, uploadBytes} from \"firebase/storage\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBNPWqWrvcGUEFhH89YIFMQNrRnuVCOO9Q\",\r\n  authDomain: \"witsquiz.firebaseapp.com\",\r\n  projectId: \"witsquiz\",\r\n  storageBucket: \"witsquiz.appspot.com\",\r\n  messagingSenderId: \"181567589133\",\r\n  appId: \"1:181567589133:web:559f28178c51e7a55a7e44\",\r\n  measurementId: \"G-3GLGV18V8H\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst storage = getStorage();\r\nexport const auth = getAuth(app);\r\nexport const googleProvider = new GoogleAuthProvider();\r\n//const analytics = getAnalytics(app);\r\n/*\r\n// Custom Hook\r\nexport function useAuth() {\r\n  const [ currentUser, setCurrentUser ] = useState();\r\n\r\n  useEffect(() => {\r\n    const unsub = onAuthStateChanged(auth, user => setCurrentUser(user));\r\n    return unsub;\r\n  }, [])\r\n\r\n  return currentUser;\r\n}*/\r\n\r\n//Storage\r\nexport async function upload(file, currentUser, setLoading){\r\n  const fileRef = ref(storage, \"profilepic/\"+currentUser.uid+\".png\");\r\n  setLoading(true);\r\n  const snapshot = await uploadBytes(fileRef,file);\r\n  const photoURL = await getDownloadURL(fileRef);\r\n  updateProfile(currentUser, {photoURL})\r\n  setLoading(false);\r\n  alert(\"New Profile Picture Uploaded!!!\");\r\n}"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C;AACA,SAAQC,OAAO,EAAEC,kBAAkB,EAAEC,aAAa,QAAO,eAAe;AACxE,SAASC,cAAc,EAAEC,UAAU,EAAEC,GAAG,EAAEC,WAAW,QAAO,kBAAkB;AAC9E;AACA;;AAEA;AACA;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,0BAA0B;EACtCC,SAAS,EAAE,UAAU;EACrBC,aAAa,EAAE,sBAAsB;EACrCC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGhB,aAAa,CAACQ,cAAc,CAAC;AACzC,MAAMS,OAAO,GAAGZ,UAAU,EAAE;AAC5B,OAAO,MAAMa,IAAI,GAAGjB,OAAO,CAACe,GAAG,CAAC;AAChC,OAAO,MAAMG,cAAc,GAAG,IAAIjB,kBAAkB,EAAE;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,eAAekB,MAAMA,CAACC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAC;EACzD,MAAMC,OAAO,GAAGlB,GAAG,CAACW,OAAO,EAAE,aAAa,GAACK,WAAW,CAACG,GAAG,GAAC,MAAM,CAAC;EAClEF,UAAU,CAAC,IAAI,CAAC;EAChB,MAAMG,QAAQ,GAAG,MAAMnB,WAAW,CAACiB,OAAO,EAACH,IAAI,CAAC;EAChD,MAAMM,QAAQ,GAAG,MAAMvB,cAAc,CAACoB,OAAO,CAAC;EAC9CrB,aAAa,CAACmB,WAAW,EAAE;IAACK;EAAQ,CAAC,CAAC;EACtCJ,UAAU,CAAC,KAAK,CAAC;EACjBK,KAAK,CAAC,iCAAiC,CAAC;AAC1C"},"metadata":{},"sourceType":"module","externalDependencies":[]}