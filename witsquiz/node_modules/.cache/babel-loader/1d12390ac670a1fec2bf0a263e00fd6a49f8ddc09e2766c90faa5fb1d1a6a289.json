{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Duma\\\\OneDrive - University of Witwatersrand\\\\Documents\\\\GitHub\\\\witsquiz\\\\witsquiz\\\\src\\\\pages\\\\login.js\",\n  _s = $RefreshSig$();\nimport { auth, googleProvider } from \"../config/firebase\";\nimport { signInWithPopup, signInWithEmailAndPassword, sendPasswordResetEmail } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport validator from 'validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  //navigate is gonna be used to move/redirect through our web pages\n  const navigate = useNavigate();\n  //These functions are used to set the values to these variables\n  const [loginEmail, setLoginEmail] = useState(\"\");\n  const [loginPassword, setLoginPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState('');\n  //Method is used to validate password(5 min characters, 1 lower and uppercase & 1 symbol)\n  const validate = value => {\n    if (validator.isStrongPassword(value, {\n      minLength: 5,\n      minLowercase: 1,\n      minUppercase: 1,\n      minNumbers: 1,\n      minSymbols: 1\n    })) {\n      setErrorMessage('Strong Password');\n    } else if (value === \"\") {\n      setErrorMessage('');\n    } else {\n      setErrorMessage('Weak Password');\n    }\n  };\n  //function used to log in users, and check if inputs are in correct form 1st!!\n  const login = async () => {\n    if (!isValidEmail(loginEmail) && loginPassword !== \"\") {\n      alert(\"Please enter a valid email address\");\n    } else {\n      try {\n        const user = await signInWithEmailAndPassword(auth, loginEmail, loginPassword);\n        console.log(user);\n        navigate(\"/\");\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n  };\n  //Method is used to reset password of existing users, a verification email is sent out...\n  const forgotPassword = () => {\n    if (isValidEmail(loginEmail)) {\n      sendPasswordResetEmail(auth, loginEmail).then(() => {\n        alert(\"Password Reset Email sent Successfully!\");\n      }).catch(error => {\n        const errormessage = error.message;\n        alert(errormessage);\n      });\n    } else {\n      alert(\"Please enter a verified user email\");\n    }\n  };\n  //Using built in firebase method to sign in with google account\n  const logInWithGoogle = async () => {\n    try {\n      const result = await signInWithPopup(auth, googleProvider);\n      console.log(result);\n      navigate(\"/\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  //This function is used to check if email input is a valid email address\n  /*\r\n  const validateEmail = (Email) => {\r\n      return String(Email)\r\n        .toLowerCase()\r\n        .match(\r\n          /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        );\r\n    };*/\n  //This function is used to check if email input is a valid email address\n  function isValidEmail(email) {\n    return /\\S+@\\S+\\.\\S+/.test(email);\n  }\n  //logIn function returns layout of the html log In page\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login to Your Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Log In by email & password \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter Email\",\n          type: \"email\",\n          required: true,\n          onChange: e => {\n            setLoginEmail(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter Password\",\n          type: \"password\",\n          onChange: e => {\n            setLoginPassword(e.target.value);\n            validate(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: 'italic',\n              color: 'red',\n              fontSize: \"0.675em\"\n            },\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"first\",\n        onClick: login,\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: forgotPassword,\n        children: \"Forgot password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Log In by Google account \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/google.png\",\n          alt: \"logo\",\n          width: \"90\",\n          height: \"30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"first\",\n        onClick: logInWithGoogle,\n        children: \" Log In \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"l8OKqiwhTRkspABFHt4kFdeQHvE=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["auth","googleProvider","signInWithPopup","signInWithEmailAndPassword","sendPasswordResetEmail","useNavigate","useState","validator","jsxDEV","_jsxDEV","Login","_s","navigate","loginEmail","setLoginEmail","loginPassword","setLoginPassword","errorMessage","setErrorMessage","validate","value","isStrongPassword","minLength","minLowercase","minUppercase","minNumbers","minSymbols","login","isValidEmail","alert","user","console","log","error","message","forgotPassword","then","catch","errormessage","logInWithGoogle","result","err","email","test","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","required","onChange","e","target","style","fontWeight","color","fontSize","className","onClick","src","alt","width","height","_c","$RefreshReg$"],"sources":["C:/Users/Duma/OneDrive - University of Witwatersrand/Documents/GitHub/witsquiz/witsquiz/src/pages/login.js"],"sourcesContent":["import { auth, googleProvider } from \"../config/firebase\";\r\nimport { signInWithPopup,signInWithEmailAndPassword,sendPasswordResetEmail} from \"firebase/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\nimport validator from 'validator'\r\n\r\nexport const Login = () => {\r\n    //navigate is gonna be used to move/redirect through our web pages\r\n    const navigate = useNavigate();\r\n    //These functions are used to set the values to these variables\r\n    const [loginEmail, setLoginEmail] = useState(\"\");\r\n    const [loginPassword, setLoginPassword] = useState(\"\");\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    //Method is used to validate password(5 min characters, 1 lower and uppercase & 1 symbol)\r\n    const validate = (value) => {\r\n        if (validator.isStrongPassword(value, {\r\n            minLength: 5, minLowercase: 1,\r\n            minUppercase: 1, minNumbers: 1, minSymbols: 1\r\n        })) {setErrorMessage('Strong Password')} \r\n        else if(value === \"\"){\r\n            setErrorMessage('')\r\n        }\r\n        else {\r\n            setErrorMessage('Weak Password')\r\n        }\r\n  }\r\n  //function used to log in users, and check if inputs are in correct form 1st!!\r\n  const login = async () => {\r\n    if(!isValidEmail(loginEmail) && loginPassword !== \"\"){\r\n        alert(\"Please enter a valid email address\");\r\n    }else{\r\n        try {\r\n            const user = await signInWithEmailAndPassword(auth,loginEmail,loginPassword);\r\n            console.log(user);\r\n            navigate(\"/\");\r\n        } \r\n        catch (error) {\r\n            console.log(error.message);\r\n        }}\r\n  };\r\n  //Method is used to reset password of existing users, a verification email is sent out...\r\n  const forgotPassword = () => {\r\n    if(isValidEmail(loginEmail)){\r\n        sendPasswordResetEmail(auth,loginEmail).then(()=>{alert(\"Password Reset Email sent Successfully!\");}).catch((error)=>{const errormessage = error.message; alert(errormessage);});\r\n    }\r\n    else{\r\n        alert(\"Please enter a verified user email\");\r\n    }\r\n  }\r\n//Using built in firebase method to sign in with google account\r\nconst logInWithGoogle = async () => {\r\n    try{\r\n        const result = await signInWithPopup(auth, googleProvider);\r\n        console.log(result);\r\n        navigate(\"/\");\r\n    }\r\n    catch(err){\r\n        console.error(err);\r\n    }\r\n};\r\n//This function is used to check if email input is a valid email address\r\n/*\r\nconst validateEmail = (Email) => {\r\n    return String(Email)\r\n      .toLowerCase()\r\n      .match(\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n      );\r\n  };*/\r\n  //This function is used to check if email input is a valid email address\r\n  function isValidEmail(email) {\r\n    return /\\S+@\\S+\\.\\S+/.test(email);\r\n  }\r\n  //logIn function returns layout of the html log In page\r\n  return (\r\n    <div>\r\n        <div>\r\n            <h1>Login to Your Account</h1>\r\n            <p> Log In by email & password </p>\r\n            <p>\r\n            <input\r\n                placeholder = \"Enter Email\" \r\n                type = \"email\"\r\n                required\r\n                onChange={(e) => {setLoginEmail(e.target.value);}}\r\n            />\r\n            </p>\r\n            <p>\r\n            <input \r\n                placeholder=\"Enter Password\"\r\n                type=\"password\"\r\n                onChange={(e) => {setLoginPassword(e.target.value);validate(e.target.value);}}\r\n            />\r\n            <p>\r\n            <span style={{fontWeight: 'italic',color: 'red',fontSize: \"0.675em\"}}>{errorMessage}</span>\r\n            </p>\r\n            </p>\r\n            <button className=\"first\" onClick={login}>Log In</button>\r\n            <p onClick={forgotPassword}>Forgot password?</p>\r\n        </div>\r\n        <div>\r\n            <h2>OR</h2>\r\n            <p> Log In by Google account </p>\r\n            <h2>\r\n            <img src={\"/google.png\"} alt = \"logo\" width=\"90\" height=\"30\" />\r\n            </h2>\r\n            <button className=\"first\" onClick={logInWithGoogle}> Log In </button>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}