{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Duma\\\\OneDrive - University of Witwatersrand\\\\Documents\\\\GitHub\\\\witsquiz\\\\witsquiz\\\\src\\\\pages\\\\signup.js\",\n  _s = $RefreshSig$();\nimport { auth, googleProvider } from \"../config/firebase\";\nimport { createUserWithEmailAndPassword, signInWithPopup, onAuthStateChanged } from \"firebase/auth\";\nimport { getAuth, sendEmailVerification } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport validator from 'validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SignUp = () => {\n  _s();\n  const Auth = getAuth();\n  //navigate is gonna be used to move/redirect through our web pages\n  const navigate = useNavigate();\n  //These functions are used to set the values to these variables\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState({});\n  const [errorMessage, setErrorMessage] = useState('');\n  //function used to validate password(5 min characters, 1 lower and uppercase & 1 symbol)\n  const validate = value => {\n    if (validator.isStrongPassword(value, {\n      minLength: 5,\n      minLowercase: 1,\n      minUppercase: 1,\n      minNumbers: 1,\n      minSymbols: 1\n    })) {\n      setErrorMessage('Strong Password');\n    } else if (value === \"\") {\n      setErrorMessage('');\n    } else {\n      setErrorMessage('Weak Password');\n    }\n  };\n  //function used to check which user is currently logged in\n  onAuthStateChanged(auth, currentUser => {\n    setUser(currentUser);\n  });\n\n  //console.log(auth?.currentUser?.email);//view current user logged in\n\n  //function used to create a new user account, and check if inputs are in correct form 1st!!\n  const signUp = async () => {\n    if (!isValidEmail(email) && password !== \"\") {\n      alert(\"Please enter a valid email address\");\n    } else {\n      try {\n        await createUserWithEmailAndPassword(auth, email, password);\n        console.log(user);\n        sendEmailVerification(Auth.currentUser).then(() => {// Email verification sent!\n        });\n        navigate(\"/\");\n      } catch (err) {\n        console.error(err.message);\n      }\n    }\n  };\n\n  //Using built in firebase method to create a new user with google account \n  const logInWithGoogle = async () => {\n    try {\n      const result = await signInWithPopup(auth, googleProvider);\n      console.log(result);\n      sendEmailVerification(Auth.currentUser).then(() => {// Email verification sent!\n      });\n      navigate(\"/\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  //This function is used to check for a valid email address\n  function isValidEmail(email) {\n    return /\\S+@\\S+\\.\\S+/.test(email);\n  }\n  //signup function returns layout of the html sign up page\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create an Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Sign Up by email & password \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter Email\",\n          type: \"email\",\n          required: true,\n          onChange: e => {\n            setEmail(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter Password\",\n          type: \"password\",\n          onChange: e => {\n            setPassword(e.target.value);\n            validate(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: 'italic',\n            color: 'red',\n            fontSize: \"0.675em\"\n          },\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"first\",\n          onClick: signUp,\n          children: \" SignUp \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Sign Up using your Google account \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/google.png\",\n          alt: \"logo\",\n          width: \"90\",\n          height: \"30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"first\",\n        onClick: logInWithGoogle,\n        children: \"Sign Up by Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(SignUp, \"lNCglEFtDBPI8c39HsfBagdCX28=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["auth","googleProvider","createUserWithEmailAndPassword","signInWithPopup","onAuthStateChanged","getAuth","sendEmailVerification","useNavigate","useState","validator","jsxDEV","_jsxDEV","SignUp","_s","Auth","navigate","email","setEmail","password","setPassword","user","setUser","errorMessage","setErrorMessage","validate","value","isStrongPassword","minLength","minLowercase","minUppercase","minNumbers","minSymbols","currentUser","signUp","isValidEmail","alert","console","log","then","err","error","message","logInWithGoogle","result","test","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","required","onChange","e","target","style","fontWeight","color","fontSize","className","onClick","src","alt","width","height","_c","$RefreshReg$"],"sources":["C:/Users/Duma/OneDrive - University of Witwatersrand/Documents/GitHub/witsquiz/witsquiz/src/pages/signup.js"],"sourcesContent":["import {auth, googleProvider} from \"../config/firebase\";\r\nimport {createUserWithEmailAndPassword, signInWithPopup,onAuthStateChanged, } from \"firebase/auth\";\r\nimport { getAuth, sendEmailVerification } from \"firebase/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\nimport validator from 'validator'\r\n\r\nexport const SignUp = () => {\r\n    const Auth = getAuth();\r\n    //navigate is gonna be used to move/redirect through our web pages\r\n    const navigate = useNavigate();\r\n    //These functions are used to set the values to these variables\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [user, setUser] = useState({});\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    //function used to validate password(5 min characters, 1 lower and uppercase & 1 symbol)\r\n    const validate = (value) => {\r\n        if (validator.isStrongPassword(value, {\r\n            minLength: 5, minLowercase: 1,\r\n            minUppercase: 1, minNumbers: 1, minSymbols: 1\r\n        })) {setErrorMessage('Strong Password')} \r\n        else if(value === \"\"){\r\n            setErrorMessage('')\r\n        }\r\n        else {\r\n            setErrorMessage('Weak Password')\r\n        }\r\n  }\r\n    //function used to check which user is currently logged in\r\n    onAuthStateChanged(auth, (currentUser) => {\r\n        setUser(currentUser);\r\n    });\r\n\r\n    //console.log(auth?.currentUser?.email);//view current user logged in\r\n\r\n    //function used to create a new user account, and check if inputs are in correct form 1st!!\r\n    const signUp = async () => {\r\n        if(!isValidEmail(email) && password !== \"\"){\r\n            alert(\"Please enter a valid email address\");\r\n        }else{\r\n            try{\r\n                await createUserWithEmailAndPassword(auth,email,password);\r\n                console.log(user);\r\n                sendEmailVerification(Auth.currentUser).then(() => {// Email verification sent!\r\n                });\r\n                navigate(\"/\");\r\n            }\r\n            catch(err){\r\n                console.error(err.message);\r\n            }\r\n        }\r\n    };\r\n\r\n    //Using built in firebase method to create a new user with google account \r\n    const logInWithGoogle = async () => {\r\n        try{\r\n            const result = await signInWithPopup(auth, googleProvider);\r\n            console.log(result);\r\n            sendEmailVerification(Auth.currentUser).then(() => {// Email verification sent!\r\n            });\r\n            navigate(\"/\");\r\n        }\r\n        catch(err){\r\n            console.error(err);\r\n        }\r\n    };\r\n    //This function is used to check for a valid email address\r\n    function isValidEmail(email) {\r\n        return /\\S+@\\S+\\.\\S+/.test(email);\r\n    }\r\n    //signup function returns layout of the html sign up page\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h1>Create an Account</h1>\r\n                <p> Sign Up by email & password </p>\r\n                <p>\r\n                <input \r\n                    placeholder=\"Enter Email\"\r\n                    type = \"email\"\r\n                    required\r\n                    onChange={(e) => {setEmail(e.target.value);}}\r\n        \r\n                />\r\n                </p>\r\n                <p>\r\n                <input \r\n                    placeholder=\"Enter Password\"\r\n                    type=\"password\"\r\n                    onChange={(e) => {setPassword(e.target.value);validate(e.target.value);}}\r\n                />\r\n                </p>\r\n                <p>\r\n                    <span style={{fontWeight: 'italic',color: 'red',fontSize: \"0.675em\"}}>{errorMessage}</span>\r\n                </p>\r\n                <p>\r\n                <button className=\"first\" onClick={signUp}> SignUp </button>\r\n                </p>\r\n                <h2>OR</h2>\r\n                <p> Sign Up using your Google account </p>\r\n                <h2>\r\n                     <img src={\"/google.png\"} alt = \"logo\" width=\"90\" height=\"30\" />\r\n                </h2>\r\n                <button className=\"first\" onClick={logInWithGoogle}>Sign Up by Google</button>\r\n            </div>          \r\n        </div>\r\n        );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}