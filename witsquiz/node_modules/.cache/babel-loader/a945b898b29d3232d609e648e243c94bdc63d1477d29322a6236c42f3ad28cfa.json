{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Duma/OneDrive - University of Witwatersrand/Documents/GitHub/witsquiz/witsquiz/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/Duma/OneDrive - University of Witwatersrand/Documents/GitHub/witsquiz/witsquiz/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Duma/OneDrive - University of Witwatersrand/Documents/GitHub/witsquiz/witsquiz/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{auth,googleProvider}from\"../config/firebase\";import{signInWithPopup,signInWithEmailAndPassword,sendPasswordResetEmail}from\"firebase/auth\";import{useNavigate}from\"react-router-dom\";import{useState}from\"react\";import validator from'validator';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Login=function Login(){//navigate is gonna be used to move/redirect through our web pages\nvar navigate=useNavigate();//These functions are used to set the values to these variables\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),loginEmail=_useState2[0],setLoginEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),loginPassword=_useState4[0],setLoginPassword=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),errorMessage=_useState6[0],setErrorMessage=_useState6[1];//Method is used to validate password(5 min characters, 1 lower and uppercase & 1 symbol)\nvar validate=function validate(value){if(validator.isStrongPassword(value,{minLength:5,minLowercase:1,minUppercase:1,minNumbers:1,minSymbols:1})){setErrorMessage('Strong Password');}else if(value===\"\"){setErrorMessage('');}else{setErrorMessage('Weak Password');}};//function used to log in users, and check if inputs are in correct form 1st!!\nvar login=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var user;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:if(!(!isValidEmail(loginEmail)&&loginPassword!==\"\")){_context.next=4;break;}alert(\"Please enter a valid email address\");_context.next=15;break;case 4:_context.prev=4;_context.next=7;return signInWithEmailAndPassword(auth,loginEmail,loginPassword);case 7:user=_context.sent;console.log(user);navigate(\"/\");_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](4);console.log(_context.t0.message);case 15:case\"end\":return _context.stop();}},_callee,null,[[4,12]]);}));return function login(){return _ref.apply(this,arguments);};}();//Method is used to reset password of existing users, a verification email is sent out...\nvar forgotPassword=function forgotPassword(){if(isValidEmail(loginEmail)){sendPasswordResetEmail(auth,loginEmail).then(function(){alert(\"Password Reset Email sent Successfully!\");}).catch(function(error){var errormessage=error.message;alert(errormessage);});}else{alert(\"Please enter a verified user email\");}};//Using built in firebase method to sign in with google account\nvar logInWithGoogle=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var result;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return signInWithPopup(auth,googleProvider);case 3:result=_context2.sent;console.log(result);navigate(\"/\");_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);console.error(_context2.t0);case 11:case\"end\":return _context2.stop();}},_callee2,null,[[0,8]]);}));return function logInWithGoogle(){return _ref2.apply(this,arguments);};}();//This function is used to check if email input is a valid email address\n/*\r\nconst validateEmail = (Email) => {\r\n    return String(Email)\r\n      .toLowerCase()\r\n      .match(\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n      );\r\n  };*/ //This function is used to check if email input is a valid email address\nfunction isValidEmail(email){return /\\S+@\\S+\\.\\S+/.test(email);}//logIn function returns layout of the html log In page\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Login to Your Account\"}),/*#__PURE__*/_jsx(\"p\",{children:\" Log In by email & password \"}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"input\",{placeholder:\"Enter Email\",type:\"email\",required:true,onChange:function onChange(e){setLoginEmail(e.target.value);}})}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Enter Password\",type:\"password\",onChange:function onChange(e){setLoginPassword(e.target.value);validate(e.target.value);}}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:'italic',color:'red',fontSize:\"0.675em\"},children:errorMessage})})]}),/*#__PURE__*/_jsx(\"button\",{className:\"first\",onClick:login,children:\"Log In\"}),/*#__PURE__*/_jsx(\"p\",{onClick:forgotPassword,children:\"Forgot password?\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"OR\"}),/*#__PURE__*/_jsx(\"p\",{children:\" Log In by Google account \"}),/*#__PURE__*/_jsx(\"h2\",{children:/*#__PURE__*/_jsx(\"img\",{src:\"/google.png\",alt:\"logo\",width:\"90\",height:\"30\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"first\",onClick:logInWithGoogle,children:\" Log In \"})]})]});};","map":{"version":3,"names":["auth","googleProvider","signInWithPopup","signInWithEmailAndPassword","sendPasswordResetEmail","useNavigate","useState","validator","jsx","_jsx","jsxs","_jsxs","Login","navigate","_useState","_useState2","_slicedToArray","loginEmail","setLoginEmail","_useState3","_useState4","loginPassword","setLoginPassword","_useState5","_useState6","errorMessage","setErrorMessage","validate","value","isStrongPassword","minLength","minLowercase","minUppercase","minNumbers","minSymbols","login","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","wrap","_callee$","_context","prev","next","isValidEmail","alert","sent","console","log","t0","message","stop","apply","arguments","forgotPassword","then","catch","error","errormessage","logInWithGoogle","_ref2","_callee2","result","_callee2$","_context2","email","test","children","placeholder","type","required","onChange","e","target","style","fontWeight","color","fontSize","className","onClick","src","alt","width","height"],"sources":["C:/Users/Duma/OneDrive - University of Witwatersrand/Documents/GitHub/witsquiz/witsquiz/src/pages/login.js"],"sourcesContent":["import { auth, googleProvider } from \"../config/firebase\";\r\nimport { signInWithPopup,signInWithEmailAndPassword,sendPasswordResetEmail} from \"firebase/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\nimport validator from 'validator'\r\n\r\nexport const Login = () => {\r\n    //navigate is gonna be used to move/redirect through our web pages\r\n    const navigate = useNavigate();\r\n    //These functions are used to set the values to these variables\r\n    const [loginEmail, setLoginEmail] = useState(\"\");\r\n    const [loginPassword, setLoginPassword] = useState(\"\");\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    //Method is used to validate password(5 min characters, 1 lower and uppercase & 1 symbol)\r\n    const validate = (value) => {\r\n        if (validator.isStrongPassword(value, {\r\n            minLength: 5, minLowercase: 1,\r\n            minUppercase: 1, minNumbers: 1, minSymbols: 1\r\n        })) {setErrorMessage('Strong Password')} \r\n        else if(value === \"\"){\r\n            setErrorMessage('')\r\n        }\r\n        else {\r\n            setErrorMessage('Weak Password')\r\n        }\r\n  }\r\n  //function used to log in users, and check if inputs are in correct form 1st!!\r\n  const login = async () => {\r\n    if(!isValidEmail(loginEmail) && loginPassword !== \"\"){\r\n        alert(\"Please enter a valid email address\");\r\n    }else{\r\n        try {\r\n            const user = await signInWithEmailAndPassword(auth,loginEmail,loginPassword);\r\n            console.log(user);\r\n            navigate(\"/\");\r\n        } \r\n        catch (error) {\r\n            console.log(error.message);\r\n        }}\r\n  };\r\n  //Method is used to reset password of existing users, a verification email is sent out...\r\n  const forgotPassword = () => {\r\n    if(isValidEmail(loginEmail)){\r\n        sendPasswordResetEmail(auth,loginEmail).then(()=>{alert(\"Password Reset Email sent Successfully!\");}).catch((error)=>{const errormessage = error.message; alert(errormessage);});\r\n    }\r\n    else{\r\n        alert(\"Please enter a verified user email\");\r\n    }\r\n  }\r\n//Using built in firebase method to sign in with google account\r\nconst logInWithGoogle = async () => {\r\n    try{\r\n        const result = await signInWithPopup(auth, googleProvider);\r\n        console.log(result);\r\n        navigate(\"/\");\r\n    }\r\n    catch(err){\r\n        console.error(err);\r\n    }\r\n};\r\n//This function is used to check if email input is a valid email address\r\n/*\r\nconst validateEmail = (Email) => {\r\n    return String(Email)\r\n      .toLowerCase()\r\n      .match(\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n      );\r\n  };*/\r\n  //This function is used to check if email input is a valid email address\r\n  function isValidEmail(email) {\r\n    return /\\S+@\\S+\\.\\S+/.test(email);\r\n  }\r\n  //logIn function returns layout of the html log In page\r\n  return (\r\n    <div>\r\n        <div>\r\n            <h1>Login to Your Account</h1>\r\n            <p> Log In by email & password </p>\r\n            <p>\r\n            <input\r\n                placeholder = \"Enter Email\" \r\n                type = \"email\"\r\n                required\r\n                onChange={(e) => {setLoginEmail(e.target.value);}}\r\n            />\r\n            </p>\r\n            <p>\r\n            <input \r\n                placeholder=\"Enter Password\"\r\n                type=\"password\"\r\n                onChange={(e) => {setLoginPassword(e.target.value);validate(e.target.value);}}\r\n            />\r\n            <p>\r\n            <span style={{fontWeight: 'italic',color: 'red',fontSize: \"0.675em\"}}>{errorMessage}</span>\r\n            </p>\r\n            </p>\r\n            <button className=\"first\" onClick={login}>Log In</button>\r\n            <p onClick={forgotPassword}>Forgot password?</p>\r\n        </div>\r\n        <div>\r\n            <h2>OR</h2>\r\n            <p> Log In by Google account </p>\r\n            <h2>\r\n            <img src={\"/google.png\"} alt = \"logo\" width=\"90\" height=\"30\" />\r\n            </h2>\r\n            <button className=\"first\" onClick={logInWithGoogle}> Log In </button>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}